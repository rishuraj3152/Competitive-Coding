        Longest Palindromic Substring

Given a string S, find the longest palindromic substring in S.

Substring of string S:

S[i...j] where 0 <= i <= j < len(S)

Palindrome string:

A string which reads the same backwards. More formally, S is palindrome if reverse(S) = S.

Incase of conflict, return the substring which occurs first ( with the least starting index ).

Example :

Input : "aaaabaaa"
Output : "aaabaaa"

            *****Solution*****

string Solution::longestPalindrome(string A) {
    int n=A.length();
    //expanding even length palindrome
    string maxpal;
    int maxlen=0,count=0;
    int i,j;
    for(int k=1;k<=n-1;k++)
    {
        if(k==1)
        {
            if(A[0]==A[1])
            {
                maxlen=2;
                maxpal=A.substr(0,2);
            }
        }
        else
        {
            count=0;
            for(i=k-1,j=k;i>=0&&j<=n-1;i--,j++)
            {
                if(A[i]!=A[j])break;
                else count++;
            }
            if(2*count>maxlen)
            {
                maxlen=2*count;
                maxpal=A.substr(k-count,2*count);
            }
        }
    }
    for(int k=0;k<n;k++)
    {
        for(i=k-1,j=k+1;i>=0&&j<=n-1;i--,j++)
        {
            if(A[i]!=A[j])break;
            else count++;
        }
        if(2*count+1>maxlen)
        {
            maxlen=2*count+1;
            maxpal=A.substr(k-count,2*count+1);
        }
    }
    if(maxlen==0)return maxpal=A[0];
    return maxpal;
    
}
