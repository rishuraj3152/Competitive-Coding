		UNIQUE BINARY SEARCH TREES

Given A, how many structurally unique BST’s (binary search trees) that store values 1...A?

Example :

Given A = 3, there are a total of 5 unique BST’s.


   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3

   	*****SOLUTION*****

  int Solution::numTrees(int A) {
    vector<int> dp(A+1);
    dp[0]=1;
    dp[1]=1;
    dp[2]=2;
    dp[3]=5;
    int sum=0;
    int left,right;
    if(A<=3)return dp[A];
    for(int i=4;i<=A;i++)
    {
        //cout<<"i="<<i<<endl;
        sum=0;
        for(int k=1;k<=i;k++)
        {
            left=dp[k-1];
            right=dp[i-k];
            sum=sum+left*right;
            //cout<<sum<<endl;
        }
        dp[i]=sum;
    }
    return dp[A];
}
