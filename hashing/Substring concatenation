		Substring Concatenation

You are given a string, S, and a list of words, L, that are all of the same length.

Find all starting indices of substring(s) in S that is a concatenation of each word in L exactly once and without any intervening characters.

Example :

S: "barfoothefoobarman"
L: ["foo", "bar"]
You should return the indices: [0,9].
(order does not matter).


		*****Solution*****

vector<int> Solution::findSubstring(string A, const vector<string> &B) {
    int i=0;
    int j=0;
    int len=B[0].length();
    vector<int> sol;
    unordered_map<string,int> store;
    for(int k=0;k<B.size();k++)
    {
        store[B[k]]++;
    }
    while(i<=A.length()-B.size()*len)
    {
        while(j<A.size())
        unordered_map<string,int> temp;
        string str=A.substr()
        
        i++;
    }
    return sol;
}
