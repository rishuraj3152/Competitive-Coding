	print all Root to leaf path with given sum

Given a binary tree and a sum, find all root-to-leaf paths where each pathâ€™s sum equals the given sum.

For example:
Given the below binary tree and sum = 22,

              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1
return

[
   [5,4,11,2],
   [5,8,4,5]
]

*****SOLUTION*****

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 void func(TreeNode* A,int B,vector<vector<int> > &ans,vector<int> &temp)
 {
     if(A==NULL)return;
     temp.push_back(A->val);
     if(A->left==NULL && A->right==NULL)
     {
         if(A->val==B)ans.push_back(temp);
         else
         {
             temp.pop_back();
             return;
         }
     }
     B=B-A->val;
     if(A->left!=NULL)
        func(A->left,B,ans,temp);
    if(A->right!=NULL)
        func(A->right,B,ans,temp);
    temp.pop_back();
 }
vector<vector<int> > Solution::pathSum(TreeNode* A, int B) {
    vector<vector<int> > ans;
    if(A==NULL)return ans;
    if(A->left==NULL && A->right==NULL)
    {
        if(A->val==B)
        {
            vector<int> temp{A->val};
            ans.push_back(temp);
            return ans;
        }
        else return ans;
    }
    vector<int> temp;
    func(A,B,ans,temp);
    return ans;
}
	